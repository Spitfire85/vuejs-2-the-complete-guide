<!DOCTYPE html>
<!--[if IE 9]>         <html class="no-js ie-9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->

<head>
  <!-- @include html-partials/global/_head -->
  <title>Vue Game</title>
  <script src="https://cdn.jsdelivr.net/npm/vue@2.6.0"></script>
</head>

<body>
  <!-- @include html-partials/global/_header -->

  <main>
    <div id="app">
      <section v-if="gameStarted" class="row">
        <div class="small-6 columns">
          <h1 class="text-center">YOU</h1>
          <div class="healthbar healthbar-outer">
            <div class="healthbar text-center" v-bind:style="statsUser" style="background-color: green; margin: 0; color: white;"
            :style="{width: statsUser.health + '%'}">
              {{ statsUser.health }}
            </div>
          </div>
        </div>
        <div class="small-6 columns">
          <h1 class="text-center">MONSTER</h1>
          <div class="healthbar healthbar-outer">
            <div class="healthbar text-center" v-bind:style="statsMonster" style="background-color: green; margin: 0; color: white;"
            :style="{width: statsMonster.health + '%'}">
              {{ statsMonster.health }}
            </div>
          </div>
        </div>
      </section>
      <section  v-if="!gameStarted" class="row controls">
        <div class="small-12 columns">
          <button @click="startGame" id="start-game">START NEW GAME</button>
        </div>
      </section>
      <section v-if="gameStarted" class="row controls">
        <div class="small-12 columns">
          <button @click="attack" id="attack">ATTACK</button>
          <button @click="specialAttack" id="special-attack">SPECIAL ATTACK</button>
          <button @click="heal" id="heal">HEAL</button>
          <button @click="giveUp" id="give-up">GIVE UP</button>
        </div>
      </section>
      <section v-if="turns.length > 0" class="row log">
        <div class="small-12 columns">
          <ul>
            <li v-for="turn in turns"
            :class="{'player-turn': turn.isPlayer, 'monster-turn': !turn.isPlayer} ">
              {{ turn.text }}
            </li>
          </ul>
        </div>
      </section>
    </div>

    <script>
      new Vue({
        el: '#app',
        data: {
          gameStarted: true,
          turns: [],
          statsUser: {
            health: 100
          },
          statsMonster: {
            health: 100
          }
        },
        methods: {
          startGame: function() {
            this.gameStarted = true,
            this.statsUser.health = 100,
            this.statsMonster.health = 100,
            this.turns = []
          },
          attack: function () {
            let attackUserScore = this.calcDamage(3, 10);
            this.turns.unshift({
              isPlayer: true,
              text: 'You hit for ' + attackUserScore
            });

            this.statsMonster.health -= attackUserScore;
            if (this.checkWin()) {
              return
            }

            this.monsterAttack();
          },
          specialAttack: function () {
            let attackUserScore = this.calcDamage(10, 20);

            this.turns.unshift({
              isPlayer: true,
              text: 'Your special attack hit for ' + attackUserScore
            });

            this.statsMonster.health -= attackUserScore;
            if (this.checkWin()) {
              return
            }

            this.monsterAttack();
          },
          heal: function () {
            if (this.statsUser.health <= 90) {
              this.statsUser.health += 10;

              this.turns.unshift({
                isPlayer: true,
                text: 'You healed yourself for 10 points'
              });
            } else {
              this.statsUser.health = 100;
              this.turns.unshift({
                isPlayer: true,
                text: 'Your health is too high to heal'
              });
            }

            this.monsterAttack();
          },
          giveUp: function () {
            this.gameStarted = false;
            this.turns = []
          },
          calcDamage (min, max) {
            return Math.max(Math.floor(Math.random() * max) + 1, min)
          },
          monsterAttack() {
            let attackMonsterScore = this.calcDamage(3, 10);
            this.statsUser.health -= attackMonsterScore;

            this.turns.unshift({
              isPlayer: false,
              text: 'Monster hits for ' + attackMonsterScore
            });
            this.checkWin();
          },
          checkWin() {
            if (this.statsMonster.health <= 0) {
              if (confirm('You won the game! Restart?')) {
                this.startGame();
              } else {
                this.gameStarted = false;
              }
              return true;
            } else if (this.statsUser.health <= 0) {
              if (confirm('You lost the game! Restart?')) {
                this.startGame();
              } else {
                this.gameStarted = false;
              }
              return true;
            }

            return false;
          }
        }
      });
    </script>
  </main>
  <!-- @include html-partials/global/_footer -->
</body>

</html>